{"ast":null,"code":"var _jsxFileName = \"/Users/ladybyrd/Thinkful/pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js\";\nimport React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport Pomodoro from \"./Pomodoro\";\nimport classNames from \"../utils/class-names\";\n\nfunction Timer({\n  timerSettings,\n  setTimerSettings\n}) {\n  const {\n    focusTime,\n    breakTime,\n    focusSeconds,\n    breakSeconds,\n    currentlyActive\n  } = timerSettings;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: () => {\n      setTimerSettings({ ...timerSettings,\n        focusTime: Math.min(Math.max(parseInt(focusTime - 5), 5), 60),\n        focusSeconds: Math.min(Math.max(parseInt(focusSeconds - 300), 300), 3600)\n      });\n    },\n    disabled: currentlyActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: () => {\n      setTimerSettings({ ...timerSettings,\n        focusTime: Math.min(Math.max(parseInt(focusTime + 5), 5), 60),\n        focusSeconds: Math.min(Math.max(parseInt(focusSeconds + 300), 300), 3600)\n      });\n    },\n    disabled: currentlyActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: () => {\n      setTimerSettings({ ...timerSettings,\n        breakTime: Math.min(Math.max(parseInt(breakTime - 1), 1), 15),\n        breakSeconds: Math.min(Math.max(parseInt(breakSeconds - 60), 60), 900)\n      });\n    },\n    disabled: currentlyActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: () => {\n      setTimerSettings({ ...timerSettings,\n        breakTime: Math.min(Math.max(parseInt(breakTime + 1), 1), 15),\n        breakSeconds: Math.min(Math.max(parseInt(breakSeconds + 60), 60), 900)\n      });\n    },\n    disabled: currentlyActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  })))))));\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/ladybyrd/Thinkful/pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","minutesToDuration","Pomodoro","classNames","Timer","timerSettings","setTimerSettings","focusTime","breakTime","focusSeconds","breakSeconds","currentlyActive","Math","min","max","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport Pomodoro from \"./Pomodoro\";\nimport classNames from \"../utils/class-names\";\n\nfunction Timer({timerSettings, setTimerSettings}){\n    const {\n        focusTime,\n        breakTime,\n        focusSeconds,\n        breakSeconds,\n        currentlyActive,\n      } = timerSettings;\n\nreturn (\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusTime)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={() => {\n                    setTimerSettings({\n                        ...timerSettings, \n                        focusTime: Math.min(\n                            Math.max(parseInt(focusTime - 5), 5),\n                            60\n                          ),\n                          focusSeconds: Math.min(\n                            Math.max(parseInt(focusSeconds - 300), 300),\n                            3600\n                          )\n                    })\n                }}\n                disabled={currentlyActive}>\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={() => {\n                    setTimerSettings({\n                      ...timerSettings,\n                      focusTime: Math.min(\n                        Math.max(parseInt(focusTime + 5), 5),\n                        60\n                      ),\n                      focusSeconds: Math.min(\n                        Math.max(parseInt(focusSeconds + 300), 300),\n                        3600\n                      ),\n                    });\n                  }\n                }\n                  disabled={currentlyActive}    \n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakTime)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={() => {\n                    setTimerSettings({\n                        ...timerSettings,\n                        breakTime: Math.min(\n                          Math.max(parseInt(breakTime - 1), 1),\n                          15\n                        ),\n                        breakSeconds: Math.min(\n                          Math.max(parseInt(breakSeconds - 60), 60),\n                          900\n                        ),\n                      });\n                  }}\n                  disabled = {currentlyActive}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={() => {\n                    setTimerSettings({\n                      ...timerSettings,\n                      breakTime: Math.min(\n                        Math.max(parseInt(breakTime + 1), 1),\n                        15\n                      ),\n                      breakSeconds: Math.min(\n                        Math.max(parseInt(breakSeconds + 60), 60),\n                        900\n                      ),\n                    });\n                  }}\n                  disabled={currentlyActive}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n)\n                }\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}